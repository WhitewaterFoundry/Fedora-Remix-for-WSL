# Universal Windows Platform

# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64|arm64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(System.DefaultWorkingDirectory)\AppxPackages'

steps:
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: '9cf82fa7-aab4-4f01-96a7-60ea713196c6'
    pipeline: '4'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
- task: CmdLine@2
  inputs:
    script: |
      mkdir x64
      move $(System.ArtifactsDirectory)\drop\install_x64_rootfs.tar.gz x64\install.tar.gz

      mkdir ARM64
      move $(System.ArtifactsDirectory)\drop\install_ARM64_rootfs.tar.gz ARM64\install.tar.gz
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: DownloadSecureFile@1
  name: signingCert
  inputs:
    secureFile: 'store-DCF.pfx'
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:Fedora-Remix-for-WSL /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)" /p:PackageCertificatePassword="1"'
    platform: 'x64'
    configuration: '$(buildConfiguration)'
    msbuildArchitecture: 'x64'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(appxPackageDir)'
    Contents: '**\*bundle.msixupload'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(appxPackageDir)'
    Contents: '**\*bundle.msixupload'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(appxPackageDir)'
    Contents: '**\*.msixbundle'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(appxPackageDir)'
    Contents: '**\*.msixbundle'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: store-flight@0
  continueOnError: true
  timeoutInMinutes: 10
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9N6GDM4K2HNC'
    flightName: 'Azure Pipelines'
    packagePath: '$(Build.ArtifactStagingDirectory)\**\*bundle.msixupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '2'
- task: store-publish@0
  continueOnError: true
  timeoutInMinutes: 10
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9N6GDM4K2HNC'
    metadataUpdateMethod: 'TextMetadata'
    metadataPath: '$(System.DefaultWorkingDirectory)\appMetadata'
    updateImages: false
    packagePath: '$(Build.ArtifactStagingDirectory)\**\*bundle.msixupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '2'
